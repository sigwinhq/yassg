services:
    _defaults:
        autowire: true
        autoconfigure: true
        bind:
            $imgproxyUrl: "%sigwin_yassg.imgproxy_url%"
            $baseDir: "%sigwin_yassg.base_dir%"
            $buildDir: "%sigwin_yassg.build_dir%"
            $routes: "%sigwin_yassg.routes%"
            $databases: "%sigwin_yassg.databases%"

    Sigwin\YASSG\:
        resource: '../src/'
        exclude:
            - '../src/Bridge/Symfony/Serializer/*'
            - '../src/Database/*'
            - '../src/DatabaseProvider.php'
            - '../src/Kernel.php'

    Sigwin\YASSG\Bridge\Symfony\Controller\:
        resource: '../src/Bridge/Symfony/Controller'
        tags: [ 'controller.service_arguments' ]
    Sigwin\YASSG\Bridge\Symfony\Command\InitCommand:
        $initDir: "%kernel.project_dir%/resources/init"

    sigwin_yassg.abstract.database.storage.filesystem_storage_type:
        class: Sigwin\YASSG\Storage\FilesystemStorage
        tags:
            -   name: sigwin_yassg.database.storage.type
                type: filesystem
    sigwin_yassg.abstract.database.storage.memory_storage_type:
        class: Sigwin\YASSG\Storage\MemoryStorage
        tags:
            -   name: sigwin_yassg.database.storage.type
                type: memory

    Sigwin\YASSG\DatabaseProvider:
        arguments:
            $locator: !tagged_locator { tag: 'sigwin_yassg.database', index_by: 'name' }

    sigwin_yassg.expression_language:
        class: Symfony\Component\ExpressionLanguage\ExpressionLanguage
        calls:
            -   registerProvider: [ '@Sigwin\YASSG\Bridge\Symfony\ExpressionLanguage\FunctionProvider' ]

    Sigwin\YASSG\Permutator:
        $expressionLanguage: '@sigwin_yassg.expression_language'

    sigwin_yassg.serializer.denormalizer.localizing:
        class: Sigwin\YASSG\Bridge\Symfony\Serializer\Normalizer\LocalizingNormalizer
        tags:
            -   name: serializer.normalizer
                priority: 3000
    sigwin_yassg.serializer.denormalizer.collection:
        class: Sigwin\YASSG\Bridge\Symfony\Serializer\Normalizer\CollectionNormalizer
        arguments:
            $expressionLanguage: '@sigwin_yassg.expression_language'
        tags:
            -   name: serializer.normalizer
                priority: 5000
    sigwin_yassg.serializer.denormalizer.expression:
        class: Sigwin\YASSG\Bridge\Symfony\Serializer\Normalizer\ExpressionNormalizer
        arguments:
            $expressionLanguage: '@sigwin_yassg.expression_language'
        tags:
            -   name: serializer.normalizer
                priority: 4000
    sigwin_yassg.serializer.denormalizer.locator:
        class: Sigwin\YASSG\Bridge\Symfony\Serializer\Normalizer\ResourceLocatorNormalizer
        arguments:
            $locator: '@file_locator'
        tags:
            -   name: serializer.normalizer
                priority: 3000

    sigwin_yassg.fragment.renderer.inline:
        class: Sigwin\YASSG\Bridge\Symfony\HttpKernel\Fragment\RelativeUrlInlineFragmentRenderer
        decorates: fragment.renderer.inline

    sigwin_yassg.file_decoder.caching_queue_file_decoder:
        class: Sigwin\YASSG\Decoder\CachingFileDecoder
        decorates: 'Sigwin\YASSG\FileDecoder'
        decoration_priority: 200
    sigwin_yassg.file_decoder.asset_file_decoder:
        class: Sigwin\YASSG\Decoder\AssetQueueFileDecoder
        decorates: 'Sigwin\YASSG\FileDecoder'
        decoration_priority: 100
    Sigwin\YASSG\FileDecoder:
        class: Sigwin\YASSG\Decoder\CompositeFileDecoder
        arguments:
            $decoders: !tagged { tag: 'sigwin_yassg.file_decoder' }

    sigwin_yassg.file_decoder.yaml_file_decoder:
        class: Sigwin\YASSG\Decoder\YamlFileDecoder
        tags:
            -   name: sigwin_yassg.file_decoder

    Embed\Embed:
        calls:
            -   setSettings:
                    -   "oembed:query_parameters":
                            maxwidth: 800
                            maxheight: 600

    League\CommonMark\Extension\CommonMark\CommonMarkCoreExtension: ~
    League\CommonMark\Extension\FrontMatter\FrontMatterExtension: ~
    League\CommonMark\Extension\Table\TableExtension: ~
    League\CommonMark\Extension\Embed\EmbedExtension: ~
    League\CommonMark\Extension\Embed\Bridge\OscaroteroEmbedAdapter:
        $embed: '@Embed\Embed'

    League\CommonMark\Extension\Footnote\FootnoteExtension: ~
    League\CommonMark\Extension\Attributes\AttributesExtension: ~
    League\CommonMark\Extension\HeadingPermalink\HeadingPermalinkExtension: ~
    League\CommonMark\Extension\TableOfContents\TableOfContentsExtension: ~
    JSW\Figure\FigureExtension: ~

    Spatie\CommonMarkHighlighter\FencedCodeRenderer: ~
    Spatie\CommonMarkHighlighter\IndentedCodeRenderer: ~

    League\CommonMark\Environment\Environment:
        arguments:
            $config:
                embed:
                    adapter: '@League\CommonMark\Extension\Embed\Bridge\OscaroteroEmbedAdapter'
        calls:
            -   addExtension: [ '@League\CommonMark\Extension\CommonMark\CommonMarkCoreExtension' ]
            -   addExtension: [ '@League\CommonMark\Extension\Embed\EmbedExtension' ]
            -   addExtension: [ '@League\CommonMark\Extension\FrontMatter\FrontMatterExtension' ]
            -   addExtension: [ '@League\CommonMark\Extension\Table\TableExtension' ]
            -   addExtension: [ '@League\CommonMark\Extension\HeadingPermalink\HeadingPermalinkExtension' ]
            -   addExtension: [ '@League\CommonMark\Extension\TableOfContents\TableOfContentsExtension' ]
            -   addExtension: [ '@League\CommonMark\Extension\Footnote\FootnoteExtension' ]
            -   addExtension: [ '@League\CommonMark\Extension\Attributes\AttributesExtension' ]
            -   addExtension: [ '@JSW\Figure\FigureExtension' ]
            -   addRenderer: [ League\CommonMark\Extension\CommonMark\Node\Block\FencedCode, '@Spatie\CommonMarkHighlighter\FencedCodeRenderer', 10 ]
            -   addRenderer: [ League\CommonMark\Extension\CommonMark\Node\Block\IndentedCode, '@Spatie\CommonMarkHighlighter\IndentedCodeRenderer', 10 ]
    League\CommonMark\Environment\EnvironmentInterface: '@League\CommonMark\Environment\Environment'

    League\CommonMark\MarkdownConverter: ~
    League\CommonMark\ConverterInterface: '@League\CommonMark\MarkdownConverter'
    sigwin_yassg.file_decoder.markdown_file_decoder:
        class: Sigwin\YASSG\Decoder\MarkdownFileDecoder
        arguments:
            - '@League\CommonMark\ConverterInterface'
        tags:
            -   name: sigwin_yassg.file_decoder

    Sigwin\YASSG\Bridge\Symfony\Routing\Generator\GlobalVariableUrlGenerator:
        decorates: Symfony\Component\Routing\Generator\UrlGeneratorInterface
        decoration_priority: 10

    Symfony\Component\Config\FileLocatorInterface: '@file_locator'
    twig.extension.routing:
        class: Symfony\Bridge\Twig\Extension\RoutingExtension
        arguments:
            $generator: '@Symfony\Component\Routing\Generator\UrlGeneratorInterface'

when@prod:
    services:
        Sigwin\YASSG\Bridge\Symfony\Routing\Generator\FilenameUrlGenerator:
            decorates: Symfony\Component\Routing\Generator\UrlGeneratorInterface
            arguments:
                $stripParameters: '%sigwin_yassg.routes.strip_parameters%'
                $urlGenerator: '@Sigwin\YASSG\Bridge\Symfony\Routing\Generator\FilenameUrlGenerator.inner'
                $routes: "%sigwin_yassg.routes%"
